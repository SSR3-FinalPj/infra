apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-replica1
  labels:
    component: redis
    role: replica
spec:
  replicas: 1
  selector:
    matchLabels:
      component: redis
      role: replica
      instance: redis-1
  template:
    metadata:
      labels:
        component: redis
        role: replica
        instance: redis-1
    spec:
      # Place on data1 node group
      nodeSelector:
        dspESType: data1
      # Anti-affinity to avoid other Redis instances
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values: ["redis"]
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: redis
        image: redis:7-alpine
        command:
        - /bin/sh
        - -c
        - |
          echo "Configuring Redis Replica 1"

          # Create config directory
          mkdir -p /etc/redis

          # Copy base config
          cp /redis-config/redis.conf /etc/redis/redis.conf

          # Set authentication if password is provided
          if [[ -n "${REDIS_PASSWORD}" ]]; then
              echo "requirepass ${REDIS_PASSWORD}" >> /etc/redis/redis.conf
              echo "masterauth ${REDIS_PASSWORD}" >> /etc/redis/redis.conf
          fi

          # Replica specific configuration
          echo "replicaof redis-master-cs 6379" >> /etc/redis/redis.conf
          echo "replica-priority 90" >> /etc/redis/redis.conf

          echo "Starting Redis Replica 1"
          exec redis-server /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
              optional: true
        - name: TZ
          value: Asia/Seoul
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config-volume
          mountPath: /redis-config
        - name: timezone
          mountPath: /etc/localtime
          readOnly: true
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: redis-config-volume
        configMap:
          name: redis-config
          defaultMode: 0755
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-replica1-data
      - name: timezone
        hostPath:
          path: /etc/localtime