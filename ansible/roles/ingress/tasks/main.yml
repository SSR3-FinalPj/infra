---
# roles/ingress/tasks/main.yml

- name: "{{ 'Ensure' if (state | default('present')) == 'present' else 'Remove' }} prod-system namespace exists"
  kubernetes.core.k8s:
    name: prod-system
    api_version: v1
    kind: Namespace
    state: "{{ state | default('present') }}"

- name: "{{ 'Create' if (state | default('present')) == 'present' else 'Remove' }} ALB IngressClass"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    definition:
      apiVersion: networking.k8s.io/v1
      kind: IngressClass
      metadata:
        name: alb
      spec:
        controller: ingress.k8s.aws/alb

# - name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} test application for ALB Ingress
#   kubernetes.core.k8s:
#     state: "{{ state | default('present') }}"
#     definition: "{{ lookup('template', 'http_test.yaml.j2') }}"

- name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} External Ingress"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    definition: "{{ lookup('template', 'alb_external_ingress.yaml.j2') }}"

- name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} Internal Ingress"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    definition: "{{ lookup('template', 'alb_internal_ingress.yaml.j2') }}"

- name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} Backend Ingress"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    definition: "{{ lookup('template', 'alb_backend_ingress.yaml.j2') }}"
