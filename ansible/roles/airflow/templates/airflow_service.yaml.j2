apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-service-config
  namespace: dev-system
data:
  pod_template.yaml: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: airflow-worker-pod-template
    spec:
      serviceAccountName: airflow-service-sa
      restartPolicy: Never
      containers:
      - name: base
        image: 805400277714.dkr.ecr.us-east-2.amazonaws.com/airflow:1.0.0
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "1Gi"
        env:
        - name: AIRFLOW__CORE__DAGS_FOLDER
          value: /opt/airflow/dags
        - name: SEOUL_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: SEOUL_API_KEY
        - name: PYTHONPATH
          value: /opt/airflow
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              name: airflow-db-connection
              key: connection
        - name: YOUTUBE_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: YOUTUBE_API_KEY
        - name: REDDIT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: REDDIT_CLIENT_ID
        - name: REDDIT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: REDDIT_CLIENT_SECRET
        - name: REDDIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: REDDIT_USERNAME
        - name: REDDIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: REDDIT_PASSWORD
        - name: REDDIT_USER_AGENT
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: REDDIT_USER_AGENT
        volumeMounts:
          - name: dags-volume
            mountPath: /opt/airflow/dags
      volumes:
      - name: dags-volume
        persistentVolumeClaim:
          claimName: dags-pvc
  airflow.cfg: |
    [core]
    dags_folder = /opt/airflow/dags
    load_examples = False
    [kubernetes]
    worker_container_repository = lovetk102/my-airflow
    worker_container_tag = latest
    pod_template_file = /opt/airflow/pod_template.yaml
    [kubernetes_executor]
    delete_worker_pods = True
    worker_container_repository = lovetk102/my-airflow
    worker_container_tag = latest
    pod_template_file = /opt/airflow/pod_template.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: airflow-service-webserver
  namespace: dev-system
spec:
  selector:
    app: airflow-service-webserver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-service-webserver
  namespace: dev-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-service-webserver
  template:
    metadata:
      labels:
        app: airflow-service-webserver
    spec:
      serviceAccountName: airflow-service-sa
      containers:
        - name: webserver
          image: 805400277714.dkr.ecr.us-east-2.amazonaws.com/airflow:1.0.0
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          command: ["airflow", "webserver"]
          env:
            - name: PYTHONPATH
              value: /opt/airflow
            - name: AIRFLOW__CORE__EXECUTOR
              value: KubernetesExecutor
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-db-connection
                  key: connection
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-service-secrets
                  key: FERNET_KEY
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-service-secrets
                  key: WEBSERVER_SECRET_KEY
          volumeMounts:
            - name: airflow-service-config-volume
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-service-config-volume
              mountPath: /opt/airflow/pod_template.yaml
              subPath: pod_template.yaml
            - name: dags-volume
              mountPath: /opt/airflow/dags
      volumes:
        - name: airflow-service-config-volume
          configMap:
            name: airflow-service-config
        - name: dags-volume
          persistentVolumeClaim:
            claimName: dags-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-service-scheduler
  namespace: dev-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-service-scheduler
  template:
    metadata:
      labels:
        app: airflow-service-scheduler
    spec:
      serviceAccountName: airflow-service-sa
      containers:
        - name: scheduler
          image: 805400277714.dkr.ecr.us-east-2.amazonaws.com/airflow:1.0.0
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          imagePullPolicy: Always
          command: ["airflow", "scheduler"]
          env:
            - name: AIRFLOW__CORE__DAGS_FOLDER
              value: /opt/airflow/dags
            - name: PYTHONPATH
              value: /opt/airflow
            - name: AIRFLOW__CORE__EXECUTOR
              value: KubernetesExecutor
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-db-connection
                  key: connection
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-service-secrets
                  key: FERNET_KEY
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow-service-secrets
                  key: WEBSERVER_SECRET_KEY
          volumeMounts:
            - name: airflow-service-config-volume
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-service-config-volume
              mountPath: /opt/airflow/pod_template.yaml
              subPath: pod_template.yaml
            - name: dags-volume
              mountPath: /opt/airflow/dags
      volumes:
        - name: airflow-service-config-volume
          configMap:
            name: airflow-service-config
        - name: dags-volume
          persistentVolumeClaim:
            claimName: dags-pvc