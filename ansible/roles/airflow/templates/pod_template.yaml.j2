apiVersion: v1
kind: Pod
metadata:
  name: airflow-worker-pod-template
  namespace: dev-system
spec:
  serviceAccountName: airflow-service-sa # 이 서비스 전용 서비스 계정 사용
  restartPolicy: Never
  containers:
  - name: base
    image: 805400277714.dkr.ecr.us-east-2.amazonaws.com/airflow:1.0.0
    imagePullPolicy: Always
    resources:
      requests:
        cpu: "500m"
        memory: "512Mi"
      limits:
        cpu: "1"
        memory: "1Gi"
    env:
    - name: AIRFLOW__CORE__DAGS_FOLDER
      value: /opt/airflow/generated_dags
    - name: SEOUL_API_KEY
      valueFrom:
        secretKeyRef:
          name: api-service-secrets
          key: SEOUL_API_KEY
    - name: PYTHONPATH
      value: /opt/airflow
    - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-db-connection
          key: connection
    - name: AIRFLOW__CORE__FERNET_KEY
      valueFrom:
        secretKeyRef:
          name: airflow-service-secrets
          key: FERNET_KEY
    - name: YOUTUBE_API_KEY
      valueFrom:
        secretKeyRef:
          name: api-service-secrets
          key: YOUTUBE_API_KEY
    - name: REDDIT_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: api-service-secrets
          key: REDDIT_CLIENT_ID
    - name: REDDIT_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: api-service-secrets
          key: REDDIT_CLIENT_SECRET
    - name: REDDIT_USERNAME
      valueFrom:
        secretKeyRef:
          name: api-service-secrets
          key: REDDIT_USERNAME
    - name: REDDIT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: api-service-secrets
          key: REDDIT_PASSWORD
    - name: REDDIT_USER_AGENT
      valueFrom:
        secretKeyRef:
          name: api-service-secrets
          key: REDDIT_USER_AGENT
    volumeMounts:
      - name: dags-volume
        mountPath: /opt/airflow/generated_dags
  volumes:
  - name: dags-volume
    persistentVolumeClaim:
      claimName: dags-pvc
