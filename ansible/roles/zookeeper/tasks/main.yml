---
# roles/zookeeper/tasks/main.yml

- name: Delete existing Zookeeper resources to ensure re-application
  kubernetes.core.k8s:
    state: absent
    src: '{{ item }}'
    namespace: '{{ dev_namespace }}'
  loop:
    - 'templates/zk.yaml'
    - 'templates/zk-svc.yaml'
    - 'templates/zk-pdb.yaml'
    - 'templates/zk-configmap.yaml'
  ignore_errors: true
  when: (state | default('present')) == 'present'

- name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} Zookeeper ConfigMap"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    src: 'templates/zk-configmap.yaml'
    namespace: '{{ dev_namespace }}'

- name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} Zookeeper PodDisruptionBudget"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    src: 'templates/zk-pdb.yaml'
    namespace: '{{ dev_namespace }}'

- name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} Zookeeper Service"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    src: 'templates/zk-svc.yaml'
    namespace: '{{ dev_namespace }}'

- name: "{{ 'Deploy' if (state | default('present')) == 'present' else 'Remove' }} Zookeeper StatefulSet"
  kubernetes.core.k8s:
    state: "{{ state | default('present') }}"
    src: 'templates/zk.yaml'
    namespace: '{{ dev_namespace }}'
