apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  replicas: 3
  serviceName: kafka-svc
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: kafka
          securityContext: {}
          image: confluentinc/cp-kafka:7.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9093
              name: server
            - containerPort: 9094
              name: server-2
          command:
            - '/bin/sh'
            - '-c'
            - |
              export KAFKA_BROKER_ID=${HOSTNAME##*-}
              export KAFKA_ADVERTISED_LISTENERS="INTERNAL_PLAINTEXT://${POD_NAME}.kafka-svc.dev-system.svc.cluster.local:9093,EXTERNAL_PLAINTEXT://${MY_HOST_IP}:32400"
              exec /etc/confluent/docker/run
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zk-svc:2181'
            - name: KAFKA_LISTENERS
              value: 'INTERNAL_PLAINTEXT://:9093,EXTERNAL_PLAINTEXT://:9094'
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT'
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: 'INTERNAL_PLAINTEXT'
            - name: KAFKA_LOG_DIRS
              value: '/var/lib/kafka/data'
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: '1'
            - name: KAFKA_HEAP_OPTS
              value: -Xmx1g -Xms1g
            - name: KAFKA_OPTS
              value: -Dlogging.level=INFO
            - name: MY_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: TZ
              value: Asia/Seoul
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          #          resources:
          #            requests:
          #              memory: 2Gi
          volumeMounts:
            - mountPath: /var/lib/kafka
              name: kafka-data
              subPathExpr: $(POD_NAME)
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - zk
                topologyKey: kubernetes.io/hostname
              weight: 1
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - kafka
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 300
